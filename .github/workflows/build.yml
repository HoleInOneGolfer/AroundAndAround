name: Build and Release

on:
  workflow_dispatch:
  push:
    branches:
      - main
    tags:
      - v*

jobs:
  build:
    name: Build Project
    runs-on: windows-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Set up MinGW and Path
        run: |
          choco install mingw -y
          echo "PATH=$PATH:/c/raylib/w64devkit/bin" >> $GITHUB_ENV

      - name: Install Raylib
        run: |
          mkdir -p C:/raylib
          Invoke-WebRequest -Uri https://github.com/raysan5/raylib/releases/download/4.5.0/raylib-4.5.0_win64_mingw.zip -OutFile raylib.zip
          tar -xf raylib.zip -C C:/raylib --strip-components=1

      - name: Build Project
        run: |
          mingw32-make all

      - name: Archive Build Artifacts
        if: always()
        run: |
          mkdir -p artifacts
          cp build/bin/game.exe artifacts/

      - name: Upload Build Artifacts
        uses: actions/upload-artifact@v3
        with:
          name: game-exe
          path: artifacts/game.exe

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')

    steps:
      - name: Download Build Artifacts
        uses: actions/download-artifact@v3
        with:
          name: game-exe

      - name: Create GitHub Release
        uses: actions/create-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          release_name: Release ${{ github.ref_name }}
          body: |
            Release version ${{ github.ref_name }} of the game.
          files: game.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
